const info_chanel = 'kyivpasstrans';

const AirtablePlus = require('airtable-plus');
const tgChnl = new AirtablePlus({ baseID: process.env.AIRTABLE_BASE,
    apiKey: process.env.AIRTABLE_KEY, tableName: info_chanel,
    transform: ({fields})=>fields.postURL // –¥–µ–ª–∞–µ–º –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–æ–∫ —É—Ä–ª
})

const UVAGA = `<div class=\"tgme_widget_message_text js-message_text\" dir=\"auto\"><b><i class=\"emoji\" style=\"background-image:url('//telegram.org/img/emoji/40/E280BC.png')\"><b>‚ÄºÔ∏è</b></i>–£–≤–∞–≥–∞<i class=\"emoji\" style=\"background-image:url('//telegram.org/img/emoji/40/E280BC.png')\"><b>‚ÄºÔ∏è</b></i>`;


const {sendWoLink, getTgJson} = require('./telegram_api');

module.exports.getTGugaga = async (chanel_name) => { 
    const {items}=await getTgJson(info_chanel)
    if (!items) return

    const flt = items.filter(fl=>fl.title.startsWith('‚ÄºÔ∏è–£–≤–∞–≥–∞‚ÄºÔ∏è'))
    console.log(`–° @${info_chanel} –Ω–æ–≤–æ—Å—Ç–µ–π = `+flt.length)
    if (flt.length==0) return

    try{   var stop_urls = await tgChnl.read({ 
        maxRecords: 10,  sort: [{field: 'Created', direction: 'desc'}]
    }) } catch (err){ return console.log('–±–¥ —Ç–≥ –ø–∞–±–ª–∏–∫–∞ –û–®–ò–ë–ö–ê! '+err); }  

    for (var i = 0; i < flt.length; i++) {
        if (stop_urls.includes(flt[i].url)) continue // –µ—Å–ª–∏ —É–∂–µ –∑–∞–ø–æ—Å—Ç–∏–ª–∏
        console.log(`–° @${info_chanel} –∑–∞–ø–æ—Å—Ç–∏–ª–∏ = `+flt[i].url)
        let clean_text = '<b>'+flt[i].content_html.replace(UVAGA, "").replace('</div>', "").replace('<br/>–ü–µ—Ä–µ–ø—Ä–æ—à—É—î–º–æ –∑–∞ –Ω–µ–∑—Ä—É—á–Ω–æ—Å—Ç—ñ.', "").replace('<br/><br/>–ü–µ—Ä–µ–ø—Ä–æ—à—É—î–º–æ', "").replace(' –∑–∞  —Ç–∏–º—á–∞—Å–æ–≤—ñ  –Ω–µ–∑—Ä—É—á–Ω–æ—Å—Ç—ñ', "").replace(/<br\/>/g, "\n")
        
        sendWoLink(`<a href="${flt[i].url}">üöå   –ö–∏—ó–≤–ø–∞—Å—Ç—Ä–∞–Ω—Å</a>\n\n${clean_text}`) // –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–∏–≤—å—é
        try{ await tgChnl.create({"postURL":flt[i].url});
        } catch (err){ return console.log('–±–¥ —Ç–≥ –∑–∞–ø–∏—Å—å –û–®–ò–ë–ö–ê! '+err); }
    }  
};